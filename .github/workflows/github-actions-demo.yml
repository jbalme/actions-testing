name: GitHub Actions Demo
on: [push]
jobs:
  Get-Latest-Zfs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |-
          printf "::set-output name=matrix::"; curl -s 'https://api.github.com/repos/openzfs/zfs/releases' | jq -c '.[0] | [.tag_name]'
  Get-Latest-Fedora-Kernels:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |-
          printf "::set-output name=matrix::"; curl -s 'https://bodhi.fedoraproject.org/updates/?search=kernel&status=testing&status=stable&releases=__current__' | jq -c '.updates | group_by(.release.version) | max_by(.[0].release.version) | [.[] | {kernel: .builds[] | select(.nvr | test("^kernel-\\d")) | .nvr | sub("^kernel-"; ""), release: .release.version}] | [.[0]]'
  Build-Kmods:
    needs:
      - Get-Latest-Zfs
      - Get-Latest-Fedora-Kernels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        zfs: ${{fromJson(needs.Get-Latest-Zfs.outputs.matrix)}}
        fedora: ${{fromJson(needs.Get-Latest-Fedora-Kernels.outputs.matrix)}}
    steps:
      - name: check out code
        uses: actions/checkout@v3
      - name: get zfs source
        run: |-
          wget https://github.com/openzfs/zfs/releases/download/${{matrix.zfs}}/${{matrix.zfs}}.tar.gz
      - name: do build
        run: |-
          docker run --interactive --rm -v $PWD:/data:z fedora:${{matrix.fedora.release}} /data/build.sh ${{matrix.fedora.release}} ${{matrix.fedora.kernel}} ${{matrix.zfs}} rpm-kmod
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: kmod-${{matrix.fedora.release}}-${{matrix.fedora.kernel}}-${{matrix.zfs}}
          path: ./packages/kmod-*.rpm
  Build-Repo:
    needs:
      - Build-Kmods
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v3
      - name: download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./packages
      - name: do something
        run: |-
          docker run --interactive --rm -v $PWD:/data:z fedora:latest /data/create-repo.sh ${{matrix.fedora.release}} ${{matrix.fedora.kernel}} ${{matrix.zfs}} 
      - name: cleanup
        run: |-
          rm -rf ./packages
      - name: upload repo to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./
  Deploy-Pages:
    needs:
      - Build-Repo
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: deploy pages
        id: deployment
        uses: actions/deploy-pages@v1

